#!/usr/bin/env python3
"""
Script para probar credenciales ROFEX en ambiente REMARKET (pruebas)
"""

import os
from dotenv import load_dotenv

def probar_credenciales_remarket():
    print("üß™ PROBANDO CREDENCIALES EN AMBIENTE REMARKET (PRUEBAS)")
    print("=" * 60)
    
    # Cargar variables de entorno
    load_dotenv()
    
    # Obtener credenciales
    user = os.getenv('ROFEX_USERNAME')
    password = os.getenv('ROFEX_PASSWORD')
    account = os.getenv('ROFEX_ACCOUNT_NUMBER')
    
    print(f"üìã Credenciales a probar:")
    print(f"   Usuario: {user}")
    print(f"   Cuenta: {account}")
    print(f"   Password: {'*' * len(password)}")
    
    try:
        import pyRofex as pr
        
        print("\nüîß Configurando ambiente REMARKET...")
        
        # Usar ambiente REMARKET (pruebas) en lugar de LIVE
        pr.initialize(
            user=user,
            password=password, 
            account=account,
            environment=pr.Environment.REMARKET
        )
        
        print("‚úÖ Inicializaci√≥n exitosa en REMARKET")
        
        # Probar conexi√≥n WebSocket b√°sica
        print("\nüîå Probando conexi√≥n WebSocket...")
        
        def test_handler(msg):
            print(f"üì® Mensaje recibido: {msg}")
        
        try:
            pr.init_websocket_connection(
                market_data_handler=test_handler,
                order_report_handler=test_handler,
                error_handler=lambda e: print(f"‚ùå Error: {e}")
            )
            
            print("‚úÖ Conexi√≥n WebSocket establecida")
            
            # Cerrar conexi√≥n
            pr.close_websocket_connection()
            print("‚úÖ Conexi√≥n cerrada correctamente")
            
            return True
            
        except Exception as e:
            print(f"‚ùå Error en WebSocket: {e}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error general: {e}")
        return False

def probar_credenciales_live():
    print("\nüöÄ PROBANDO CREDENCIALES EN AMBIENTE LIVE (PRODUCCI√ìN)")
    print("=" * 60)
    
    # Cargar variables de entorno
    load_dotenv()
    
    # Obtener credenciales
    user = os.getenv('ROFEX_USERNAME')
    password = os.getenv('ROFEX_PASSWORD')
    account = os.getenv('ROFEX_ACCOUNT_NUMBER')
    
    try:
        import pyRofex as pr
        
        print("üîß Configurando ambiente LIVE...")
        
        # Usar ambiente LIVE (producci√≥n)
        pr.initialize(
            user=user,
            password=password, 
            account=account,
            environment=pr.Environment.LIVE
        )
        
        print("‚úÖ Inicializaci√≥n exitosa en LIVE")
        return True
        
    except Exception as e:
        print(f"‚ùå Error en LIVE: {e}")
        return False

def main():
    print("üîê VERIFICADOR DE CREDENCIALES ROFEX")
    print("=" * 60)
    
    # Probar primero en REMARKET (m√°s seguro)
    if probar_credenciales_remarket():
        print("\n‚úÖ CREDENCIALES V√ÅLIDAS EN REMARKET")
        
        # Si funciona en REMARKET, probar en LIVE
        if probar_credenciales_live():
            print("\nüéâ CREDENCIALES V√ÅLIDAS EN AMBOS AMBIENTES")
            print("‚úÖ Puedes usar LIVE para trading real")
        else:
            print("\n‚ö†Ô∏è CREDENCIALES V√ÅLIDAS SOLO EN REMARKET")
            print("‚ùå No puedes usar LIVE (posible problema de permisos)")
    else:
        print("\n‚ùå CREDENCIALES INV√ÅLIDAS")
        print("üîß Verifica usuario, password y cuenta")

if __name__ == "__main__":
    main()
